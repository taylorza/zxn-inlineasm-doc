#program asmbline  10 RUN AT 3  20 SAVE "asmbline.bas"  30 .asm  40 ;  output "/dot/bline"  50 ;  org $2000  60 ;  ld a,l  70 ;  or h  80 ;  jp z,showusage         ;Show usage if no arguments  90 ;  xor a 100 ;  ld (lineno),a 110 ;  ld (lineno+1),a        ;Zero line number 120 ;parselineno 130 ;  ld a,(hl)              ;Get argument character 140 ;  cp $0d                 ;Check for end of argument 150 ;  jr z,setline           ;  if so go try set the line  160 ;  cp "0"                 ;Else check for valid digit 170 ;  jr c,notnum 180 ;  cp "9"+1 190 ;  jr nc,notnum            200 ;  sub "0"                ;Get digit in range 0-9 210 ;  push hl 220 ;   ld hl,(lineno)          230 ;   ld e, l 240 ;   ld d, h 250 ;   add hl,hl              ;x2 260 ;   adc hl,hl              ;x4 270 ;   adc hl,hl              ;x8 280 ;   adc hl,de 290 ;   adc hl,de              ;x10 300 ;   add hl,a               ;+unit value 310 ;   ld (lineno),hl         ;update line no 320 ;  pop hl 330 ;  inc hl                  ;move to next digit 340 ;  jr parselineno 350 ;notnum 360 ;  ld hl,nanmsg 370 ;  call printstr 380 ;  ret 390 ;showusage 400 ;  ld hl,usage 410 ;  call printstr 420 ;  ret 430 ;;--------------------------------------------------- 440 ;; Set editor line number 450 ;setline 460 ;  ld hl, $5c49 470 ;  ld de,(lineno) 480 ;  ld (hl),e 490 ;  inc l 500 ;  ld (hl),d 510 ;  ret 520 ;;--------------------------------------------------- 530 ;; Print string 540 ;; Input: HL - Null terminated string to print 550 ;printstr 560 ;  ld a,(hl) 570 ;  or a 580 ;  ret z 590 ;  rst $10 600 ;  inc hl 610 ;  jr printStr 620 ;nanmsg db "Invalid line number",$0d 630 ;usage  db "BASIC Goto Line",$0d 640 ;       db ".bline <lineno>",$0d 650 ;       db "<lineno> - Line number to goto",0 660 ;lineno dw 0